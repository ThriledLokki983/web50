var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _SymbolJs = require('./_Symbol.js');
var _SymbolJsDefault = _parcelHelpers.interopDefault(_SymbolJs);
var _getRawTagJs = require('./_getRawTag.js');
var _getRawTagJsDefault = _parcelHelpers.interopDefault(_getRawTagJs);
var _objectToStringJs = require('./_objectToString.js');
var _objectToStringJsDefault = _parcelHelpers.interopDefault(_objectToStringJs);
/** `Object#toString` result references.*/
var nullTag = '[object Null]', undefinedTag = '[object Undefined]';
/** Built-in value references.*/
var symToStringTag = _SymbolJsDefault.default ? _SymbolJsDefault.default.toStringTag : undefined;
/**
* The base implementation of `getTag` without fallbacks for buggy environments.
*
* @private
* @param {*} value The value to query.
* @returns {string} Returns the `toStringTag`.
*/
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return symToStringTag && (symToStringTag in Object(value)) ? _getRawTagJsDefault.default(value) : _objectToStringJsDefault.default(value);
}
exports.default = baseGetTag;
