var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _SymbolJs = require('./_Symbol.js');
var _SymbolJsDefault = _parcelHelpers.interopDefault(_SymbolJs);
var _copyArrayJs = require('./_copyArray.js');
var _copyArrayJsDefault = _parcelHelpers.interopDefault(_copyArrayJs);
var _getTagJs = require('./_getTag.js');
var _getTagJsDefault = _parcelHelpers.interopDefault(_getTagJs);
var _isArrayLikeJs = require('./isArrayLike.js');
var _isArrayLikeJsDefault = _parcelHelpers.interopDefault(_isArrayLikeJs);
var _isStringJs = require('./isString.js');
var _isStringJsDefault = _parcelHelpers.interopDefault(_isStringJs);
var _iteratorToArrayJs = require('./_iteratorToArray.js');
var _iteratorToArrayJsDefault = _parcelHelpers.interopDefault(_iteratorToArrayJs);
var _mapToArrayJs = require('./_mapToArray.js');
var _mapToArrayJsDefault = _parcelHelpers.interopDefault(_mapToArrayJs);
var _setToArrayJs = require('./_setToArray.js');
var _setToArrayJsDefault = _parcelHelpers.interopDefault(_setToArrayJs);
var _stringToArrayJs = require('./_stringToArray.js');
var _stringToArrayJsDefault = _parcelHelpers.interopDefault(_stringToArrayJs);
var _valuesJs = require('./values.js');
var _valuesJsDefault = _parcelHelpers.interopDefault(_valuesJs);
/** `Object#toString` result references.*/
var mapTag = '[object Map]', setTag = '[object Set]';
/** Built-in value references.*/
var symIterator = _SymbolJsDefault.default ? _SymbolJsDefault.default.iterator : undefined;
/**
* Converts `value` to an array.
*
* @static
* @since 0.1.0
* @memberOf _
* @category Lang
* @param {*} value The value to convert.
* @returns {Array} Returns the converted array.
* @example
*
* _.toArray({ 'a': 1, 'b': 2 });
* // => [1, 2]
*
* _.toArray('abc');
* // => ['a', 'b', 'c']
*
* _.toArray(1);
* // => []
*
* _.toArray(null);
* // => []
*/
function toArray(value) {
  if (!value) {
    return [];
  }
  if (_isArrayLikeJsDefault.default(value)) {
    return _isStringJsDefault.default(value) ? _stringToArrayJsDefault.default(value) : _copyArrayJsDefault.default(value);
  }
  if (symIterator && value[symIterator]) {
    return _iteratorToArrayJsDefault.default(value[symIterator]());
  }
  var tag = _getTagJsDefault.default(value), func = tag == mapTag ? _mapToArrayJsDefault.default : tag == setTag ? _setToArrayJsDefault.default : _valuesJsDefault.default;
  return func(value);
}
exports.default = toArray;
