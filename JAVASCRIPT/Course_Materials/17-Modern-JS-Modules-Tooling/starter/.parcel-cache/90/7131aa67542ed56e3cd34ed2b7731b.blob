var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseAssignValueJs = require('./_baseAssignValue.js');
var _baseAssignValueJsDefault = _parcelHelpers.interopDefault(_baseAssignValueJs);
var _eqJs = require('./eq.js');
var _eqJsDefault = _parcelHelpers.interopDefault(_eqJs);
/** Used for built-in method references.*/
var objectProto = Object.prototype;
/** Used to check objects for own properties.*/
var hasOwnProperty = objectProto.hasOwnProperty;
/**
* Assigns `value` to `key` of `object` if the existing value is not equivalent
* using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
* for equality comparisons.
*
* @private
* @param {Object} object The object to modify.
* @param {string} key The key of the property to assign.
* @param {*} value The value to assign.
*/
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && _eqJsDefault.default(objValue, value)) || value === undefined && !((key in object))) {
    _baseAssignValueJsDefault.default(object, key, value);
  }
}
exports.default = assignValue;
