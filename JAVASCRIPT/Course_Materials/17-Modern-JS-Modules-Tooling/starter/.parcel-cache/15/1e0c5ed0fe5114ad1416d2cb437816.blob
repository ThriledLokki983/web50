var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseGetJs = require('./_baseGet.js');
var _baseGetJsDefault = _parcelHelpers.interopDefault(_baseGetJs);
var _baseSetJs = require('./_baseSet.js');
var _baseSetJsDefault = _parcelHelpers.interopDefault(_baseSetJs);
var _castPathJs = require('./_castPath.js');
var _castPathJsDefault = _parcelHelpers.interopDefault(_castPathJs);
/**
* The base implementation of  `_.pickBy` without support for iteratee shorthands.
*
* @private
* @param {Object} object The source object.
* @param {string[]} paths The property paths to pick.
* @param {Function} predicate The function invoked per property.
* @returns {Object} Returns the new object.
*/
function basePickBy(object, paths, predicate) {
  var index = -1, length = paths.length, result = {};
  while (++index < length) {
    var path = paths[index], value = _baseGetJsDefault.default(object, path);
    if (predicate(value, path)) {
      _baseSetJsDefault.default(result, _castPathJsDefault.default(path, object), value);
    }
  }
  return result;
}
exports.default = basePickBy;
