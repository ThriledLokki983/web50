var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseSortedIndexJs = require('./_baseSortedIndex.js');
var _baseSortedIndexJsDefault = _parcelHelpers.interopDefault(_baseSortedIndexJs);
var _eqJs = require('./eq.js');
var _eqJsDefault = _parcelHelpers.interopDefault(_eqJs);
/**
* This method is like `_.lastIndexOf` except that it performs a binary
* search on a sorted `array`.
*
* @static
* @memberOf _
* @since 4.0.0
* @category Array
* @param {Array} array The array to inspect.
* @param {*} value The value to search for.
* @returns {number} Returns the index of the matched value, else `-1`.
* @example
*
* _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
* // => 3
*/
function sortedLastIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = _baseSortedIndexJsDefault.default(array, value, true) - 1;
    if (_eqJsDefault.default(array[index], value)) {
      return index;
    }
  }
  return -1;
}
exports.default = sortedLastIndexOf;
