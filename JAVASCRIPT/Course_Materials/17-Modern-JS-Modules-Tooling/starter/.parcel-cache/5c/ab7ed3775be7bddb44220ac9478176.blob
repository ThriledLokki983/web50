var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _createToPairsJs = require('./_createToPairs.js');
var _createToPairsJsDefault = _parcelHelpers.interopDefault(_createToPairsJs);
var _keysInJs = require('./keysIn.js');
var _keysInJsDefault = _parcelHelpers.interopDefault(_keysInJs);
/**
* Creates an array of own and inherited enumerable string keyed-value pairs
* for `object` which can be consumed by `_.fromPairs`. If `object` is a map
* or set, its entries are returned.
*
* @static
* @memberOf _
* @since 4.0.0
* @alias entriesIn
* @category Object
* @param {Object} object The object to query.
* @returns {Array} Returns the key-value pairs.
* @example
*
* function Foo() {
*   this.a = 1;
*   this.b = 2;
* }
*
* Foo.prototype.c = 3;
*
* _.toPairsIn(new Foo);
* // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
*/
var toPairsIn = _createToPairsJsDefault.default(_keysInJsDefault.default);
exports.default = toPairsIn;
