var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseIterateeJs = require('./_baseIteratee.js');
var _baseIterateeJsDefault = _parcelHelpers.interopDefault(_baseIterateeJs);
var _isArrayLikeJs = require('./isArrayLike.js');
var _isArrayLikeJsDefault = _parcelHelpers.interopDefault(_isArrayLikeJs);
var _keysJs = require('./keys.js');
var _keysJsDefault = _parcelHelpers.interopDefault(_keysJs);
/**
* Creates a `_.find` or `_.findLast` function.
*
* @private
* @param {Function} findIndexFunc The function to find the collection index.
* @returns {Function} Returns the new find function.
*/
function createFind(findIndexFunc) {
  return function (collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!_isArrayLikeJsDefault.default(collection)) {
      var iteratee = _baseIterateeJsDefault.default(predicate, 3);
      collection = _keysJsDefault.default(collection);
      predicate = function (key) {
        return iteratee(iterable[key], key, iterable);
      };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}
exports.default = createFind;
