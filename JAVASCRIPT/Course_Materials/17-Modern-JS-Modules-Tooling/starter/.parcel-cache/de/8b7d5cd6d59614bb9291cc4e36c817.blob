var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseValuesJs = require('./_baseValues.js');
var _baseValuesJsDefault = _parcelHelpers.interopDefault(_baseValuesJs);
var _keysInJs = require('./keysIn.js');
var _keysInJsDefault = _parcelHelpers.interopDefault(_keysInJs);
/**
* Creates an array of the own and inherited enumerable string keyed property
* values of `object`.
*
* **Note:** Non-object values are coerced to objects.
*
* @static
* @memberOf _
* @since 3.0.0
* @category Object
* @param {Object} object The object to query.
* @returns {Array} Returns the array of property values.
* @example
*
* function Foo() {
*   this.a = 1;
*   this.b = 2;
* }
*
* Foo.prototype.c = 3;
*
* _.valuesIn(new Foo);
* // => [1, 2, 3] (iteration order is not guaranteed)
*/
function valuesIn(object) {
  return object == null ? [] : _baseValuesJsDefault.default(object, _keysInJsDefault.default(object));
}
exports.default = valuesIn;
