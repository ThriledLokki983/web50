var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseIsArgumentsJs = require('./_baseIsArguments.js');
var _baseIsArgumentsJsDefault = _parcelHelpers.interopDefault(_baseIsArgumentsJs);
var _isObjectLikeJs = require('./isObjectLike.js');
var _isObjectLikeJsDefault = _parcelHelpers.interopDefault(_isObjectLikeJs);
/** Used for built-in method references.*/
var objectProto = Object.prototype;
/** Used to check objects for own properties.*/
var hasOwnProperty = objectProto.hasOwnProperty;
/** Built-in value references.*/
var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/**
* Checks if `value` is likely an `arguments` object.
*
* @static
* @memberOf _
* @since 0.1.0
* @category Lang
* @param {*} value The value to check.
* @returns {boolean} Returns `true` if `value` is an `arguments` object,
*  else `false`.
* @example
*
* _.isArguments(function() { return arguments; }());
* // => true
*
* _.isArguments([1, 2, 3]);
* // => false
*/
var isArguments = _baseIsArgumentsJsDefault.default((function () {
  return arguments;
})()) ? _baseIsArgumentsJsDefault.default : function (value) {
  return _isObjectLikeJsDefault.default(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
exports.default = isArguments;
