var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _copyArrayJs = require('./_copyArray.js');
var _copyArrayJsDefault = _parcelHelpers.interopDefault(_copyArrayJs);
var _isIndexJs = require('./_isIndex.js');
var _isIndexJsDefault = _parcelHelpers.interopDefault(_isIndexJs);
/*Built-in method references for those with the same name as other `lodash` methods.*/
var nativeMin = Math.min;
/**
* Reorder `array` according to the specified indexes where the element at
* the first index is assigned as the first element, the element at
* the second index is assigned as the second element, and so on.
*
* @private
* @param {Array} array The array to reorder.
* @param {Array} indexes The arranged array indexes.
* @returns {Array} Returns `array`.
*/
function reorder(array, indexes) {
  var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = _copyArrayJsDefault.default(array);
  while (length--) {
    var index = indexes[length];
    array[length] = _isIndexJsDefault.default(index, arrLength) ? oldArray[index] : undefined;
  }
  return array;
}
exports.default = reorder;
