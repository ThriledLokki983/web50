var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseForOwnRightJs = require('./_baseForOwnRight.js');
var _baseForOwnRightJsDefault = _parcelHelpers.interopDefault(_baseForOwnRightJs);
var _castFunctionJs = require('./_castFunction.js');
var _castFunctionJsDefault = _parcelHelpers.interopDefault(_castFunctionJs);
/**
* This method is like `_.forOwn` except that it iterates over properties of
* `object` in the opposite order.
*
* @static
* @memberOf _
* @since 2.0.0
* @category Object
* @param {Object} object The object to iterate over.
* @param {Function} [iteratee=_.identity] The function invoked per iteration.
* @returns {Object} Returns `object`.
* @see _.forOwn
* @example
*
* function Foo() {
*   this.a = 1;
*   this.b = 2;
* }
*
* Foo.prototype.c = 3;
*
* _.forOwnRight(new Foo, function(value, key) {
*   console.log(key);
* });
* // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
*/
function forOwnRight(object, iteratee) {
  return object && _baseForOwnRightJsDefault.default(object, _castFunctionJsDefault.default(iteratee));
}
exports.default = forOwnRight;
