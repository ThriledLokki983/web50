var _shoppingCartJs = require('./shoppingCart.js');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _shoppingCartJsDefault = _parcelHelpers.interopDefault(_shoppingCartJs);
var _shoppingCartJsDefault = _parcelHelpers.interopDefault(_shoppingCartJs);
require('./modern.js');
var _lodashEs = require('lodash-es');
var _lodashEsDefault = _parcelHelpers.interopDefault(_lodashEs);
require('core-js/stable');
// console.log('Importing Module');
// addToCart('bread', 10);
// console.log(price, qt);
// ShoppingCart.addToCart('bread', 10);
// console.log(ShoppingCart.totalPrice);
_shoppingCartJsDefault.default('pizza', 4);
// much better way to import
const state = {
  cart: [{
    product: 'bread',
    quantity: 7
  }, {
    product: 'pizza',
    quantity: 5
  }],
  user: {
    loggedIn: true
  }
};
const stateClone = Object.assign({}, state);
const stateDeepClone = _lodashEsDefault.default(state);
console.log(stateClone);
state.user.loggedIn = false;
console.log(stateClone);
console.log(stateDeepClone);
// will keep the browser in the same state.
if (module.hot) {
  module.hot.accept();
}
// let greeting;
class Person {
  constructor(name) {
    this.name = name;
    console.log(`Hey, ${this.name}`);
  }
}
const gid = new Person('Gideon');
Promise.resolve('TEST').then(res => console.log(res));
