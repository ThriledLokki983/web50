var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _wrapperLodashJs = require('./wrapperLodash.js');
var _wrapperLodashJsDefault = _parcelHelpers.interopDefault(_wrapperLodashJs);
/**
* Creates a `lodash` wrapper instance that wraps `value` with explicit method
* chain sequences enabled. The result of such sequences must be unwrapped
* with `_#value`.
*
* @static
* @memberOf _
* @since 1.3.0
* @category Seq
* @param {*} value The value to wrap.
* @returns {Object} Returns the new `lodash` wrapper instance.
* @example
*
* var users = [
*   { 'user': 'barney',  'age': 36 },
*   { 'user': 'fred',    'age': 40 },
*   { 'user': 'pebbles', 'age': 1 }
* ];
*
* var youngest = _
*   .chain(users)
*   .sortBy('age')
*   .map(function(o) {
*     return o.user + ' is ' + o.age;
*   })
*   .head()
*   .value();
* // => 'pebbles is 1'
*/
function chain(value) {
  var result = _wrapperLodashJsDefault.default(value);
  result.__chain__ = true;
  return result;
}
exports.default = chain;
