var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _basePropertyJs = require('./_baseProperty.js');
var _basePropertyJsDefault = _parcelHelpers.interopDefault(_basePropertyJs);
var _basePropertyDeepJs = require('./_basePropertyDeep.js');
var _basePropertyDeepJsDefault = _parcelHelpers.interopDefault(_basePropertyDeepJs);
var _isKeyJs = require('./_isKey.js');
var _isKeyJsDefault = _parcelHelpers.interopDefault(_isKeyJs);
var _toKeyJs = require('./_toKey.js');
var _toKeyJsDefault = _parcelHelpers.interopDefault(_toKeyJs);
/**
* Creates a function that returns the value at `path` of a given object.
*
* @static
* @memberOf _
* @since 2.4.0
* @category Util
* @param {Array|string} path The path of the property to get.
* @returns {Function} Returns the new accessor function.
* @example
*
* var objects = [
*   { 'a': { 'b': 2 } },
*   { 'a': { 'b': 1 } }
* ];
*
* _.map(objects, _.property('a.b'));
* // => [2, 1]
*
* _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
* // => [1, 2]
*/
function property(path) {
  return _isKeyJsDefault.default(path) ? _basePropertyJsDefault.default(_toKeyJsDefault.default(path)) : _basePropertyDeepJsDefault.default(path);
}
exports.default = property;
