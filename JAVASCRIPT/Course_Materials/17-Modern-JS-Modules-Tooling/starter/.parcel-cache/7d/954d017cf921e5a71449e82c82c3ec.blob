var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _arrayPushJs = require('./_arrayPush.js');
var _arrayPushJsDefault = _parcelHelpers.interopDefault(_arrayPushJs);
var _getPrototypeJs = require('./_getPrototype.js');
var _getPrototypeJsDefault = _parcelHelpers.interopDefault(_getPrototypeJs);
var _getSymbolsJs = require('./_getSymbols.js');
var _getSymbolsJsDefault = _parcelHelpers.interopDefault(_getSymbolsJs);
var _stubArrayJs = require('./stubArray.js');
var _stubArrayJsDefault = _parcelHelpers.interopDefault(_stubArrayJs);
/*Built-in method references for those with the same name as other `lodash` methods.*/
var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
* Creates an array of the own and inherited enumerable symbols of `object`.
*
* @private
* @param {Object} object The object to query.
* @returns {Array} Returns the array of symbols.
*/
var getSymbolsIn = !nativeGetSymbols ? _stubArrayJsDefault.default : function (object) {
  var result = [];
  while (object) {
    _arrayPushJsDefault.default(result, _getSymbolsJsDefault.default(object));
    object = _getPrototypeJsDefault.default(object);
  }
  return result;
};
exports.default = getSymbolsIn;
