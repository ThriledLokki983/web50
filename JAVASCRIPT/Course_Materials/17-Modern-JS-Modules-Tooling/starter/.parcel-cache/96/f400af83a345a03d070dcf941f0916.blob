var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _applyJs = require('./_apply.js');
var _applyJsDefault = _parcelHelpers.interopDefault(_applyJs);
var _createCtorJs = require('./_createCtor.js');
var _createCtorJsDefault = _parcelHelpers.interopDefault(_createCtorJs);
var _createHybridJs = require('./_createHybrid.js');
var _createHybridJsDefault = _parcelHelpers.interopDefault(_createHybridJs);
var _createRecurryJs = require('./_createRecurry.js');
var _createRecurryJsDefault = _parcelHelpers.interopDefault(_createRecurryJs);
var _getHolderJs = require('./_getHolder.js');
var _getHolderJsDefault = _parcelHelpers.interopDefault(_getHolderJs);
var _replaceHoldersJs = require('./_replaceHolders.js');
var _replaceHoldersJsDefault = _parcelHelpers.interopDefault(_replaceHoldersJs);
var _rootJs = require('./_root.js');
var _rootJsDefault = _parcelHelpers.interopDefault(_rootJs);
/**
* Creates a function that wraps `func` to enable currying.
*
* @private
* @param {Function} func The function to wrap.
* @param {number} bitmask The bitmask flags. See `createWrap` for more details.
* @param {number} arity The arity of `func`.
* @returns {Function} Returns the new wrapped function.
*/
function createCurry(func, bitmask, arity) {
  var Ctor = _createCtorJsDefault.default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index = length, placeholder = _getHolderJsDefault.default(wrapper);
    while (index--) {
      args[index] = arguments[index];
    }
    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : _replaceHoldersJsDefault.default(args, placeholder);
    length -= holders.length;
    if (length < arity) {
      return _createRecurryJsDefault.default(func, bitmask, _createHybridJsDefault.default, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
    }
    var fn = this && this !== _rootJsDefault.default && this instanceof wrapper ? Ctor : func;
    return _applyJsDefault.default(fn, this, args);
  }
  return wrapper;
}
exports.default = createCurry;
