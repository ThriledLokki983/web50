var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseClampJs = require('./_baseClamp.js');
var _baseClampJsDefault = _parcelHelpers.interopDefault(_baseClampJs);
var _toNumberJs = require('./toNumber.js');
var _toNumberJsDefault = _parcelHelpers.interopDefault(_toNumberJs);
/**
* Clamps `number` within the inclusive `lower` and `upper` bounds.
*
* @static
* @memberOf _
* @since 4.0.0
* @category Number
* @param {number} number The number to clamp.
* @param {number} [lower] The lower bound.
* @param {number} upper The upper bound.
* @returns {number} Returns the clamped number.
* @example
*
* _.clamp(-10, -5, 5);
* // => -5
*
* _.clamp(10, -5, 5);
* // => 5
*/
function clamp(number, lower, upper) {
  if (upper === undefined) {
    upper = lower;
    lower = undefined;
  }
  if (upper !== undefined) {
    upper = _toNumberJsDefault.default(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== undefined) {
    lower = _toNumberJsDefault.default(lower);
    lower = lower === lower ? lower : 0;
  }
  return _baseClampJsDefault.default(_toNumberJsDefault.default(number), lower, upper);
}
exports.default = clamp;
