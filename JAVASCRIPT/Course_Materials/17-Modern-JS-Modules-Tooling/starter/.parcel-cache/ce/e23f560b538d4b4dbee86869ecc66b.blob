var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _baseMatchesJs = require('./_baseMatches.js');
var _baseMatchesJsDefault = _parcelHelpers.interopDefault(_baseMatchesJs);
var _baseMatchesPropertyJs = require('./_baseMatchesProperty.js');
var _baseMatchesPropertyJsDefault = _parcelHelpers.interopDefault(_baseMatchesPropertyJs);
var _identityJs = require('./identity.js');
var _identityJsDefault = _parcelHelpers.interopDefault(_identityJs);
var _isArrayJs = require('./isArray.js');
var _isArrayJsDefault = _parcelHelpers.interopDefault(_isArrayJs);
var _propertyJs = require('./property.js');
var _propertyJsDefault = _parcelHelpers.interopDefault(_propertyJs);
/**
* The base implementation of `_.iteratee`.
*
* @private
* @param {*} [value=_.identity] The value to convert to an iteratee.
* @returns {Function} Returns the iteratee.
*/
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return _identityJsDefault.default;
  }
  if (typeof value == 'object') {
    return _isArrayJsDefault.default(value) ? _baseMatchesPropertyJsDefault.default(value[0], value[1]) : _baseMatchesJsDefault.default(value);
  }
  return _propertyJsDefault.default(value);
}
exports.default = baseIteratee;
