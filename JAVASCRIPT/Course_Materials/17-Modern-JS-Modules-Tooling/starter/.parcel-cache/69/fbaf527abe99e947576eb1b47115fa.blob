var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _arrayReduceJs = require('./_arrayReduce.js');
var _arrayReduceJsDefault = _parcelHelpers.interopDefault(_arrayReduceJs);
var _deburrJs = require('./deburr.js');
var _deburrJsDefault = _parcelHelpers.interopDefault(_deburrJs);
var _wordsJs = require('./words.js');
var _wordsJsDefault = _parcelHelpers.interopDefault(_wordsJs);
/** Used to compose unicode capture groups.*/
var rsApos = "['\u2019]";
/** Used to match apostrophes.*/
var reApos = RegExp(rsApos, 'g');
/**
* Creates a function like `_.camelCase`.
*
* @private
* @param {Function} callback The function to combine each word.
* @returns {Function} Returns the new compounder function.
*/
function createCompounder(callback) {
  return function (string) {
    return _arrayReduceJsDefault.default(_wordsJsDefault.default(_deburrJsDefault.default(string).replace(reApos, '')), callback, '');
  };
}
exports.default = createCompounder;
