var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _toStringJs = require('./toString.js');
var _toStringJsDefault = _parcelHelpers.interopDefault(_toStringJs);
var _unescapeHtmlCharJs = require('./_unescapeHtmlChar.js');
var _unescapeHtmlCharJsDefault = _parcelHelpers.interopDefault(_unescapeHtmlCharJs);
/** Used to match HTML entities and HTML characters.*/
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reHasEscapedHtml = RegExp(reEscapedHtml.source);
/**
* The inverse of `_.escape`; this method converts the HTML entities
* `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
* their corresponding characters.
*
* **Note:** No other HTML entities are unescaped. To unescape additional
* HTML entities use a third-party library like [_he_](https://mths.be/he).
*
* @static
* @memberOf _
* @since 0.6.0
* @category String
* @param {string} [string=''] The string to unescape.
* @returns {string} Returns the unescaped string.
* @example
*
* _.unescape('fred, barney, &amp; pebbles');
* // => 'fred, barney, & pebbles'
*/
function unescape(string) {
  string = _toStringJsDefault.default(string);
  return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, _unescapeHtmlCharJsDefault.default) : string;
}
exports.default = unescape;
