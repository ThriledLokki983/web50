var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _arrayFilterJs = require('./_arrayFilter.js');
var _arrayFilterJsDefault = _parcelHelpers.interopDefault(_arrayFilterJs);
var _stubArrayJs = require('./stubArray.js');
var _stubArrayJsDefault = _parcelHelpers.interopDefault(_stubArrayJs);
/** Used for built-in method references.*/
var objectProto = Object.prototype;
/** Built-in value references.*/
var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/*Built-in method references for those with the same name as other `lodash` methods.*/
var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
* Creates an array of the own enumerable symbols of `object`.
*
* @private
* @param {Object} object The object to query.
* @returns {Array} Returns the array of symbols.
*/
var getSymbols = !nativeGetSymbols ? _stubArrayJsDefault.default : function (object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return _arrayFilterJsDefault.default(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};
exports.default = getSymbols;
