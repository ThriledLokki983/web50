var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _createToPairsJs = require('./_createToPairs.js');
var _createToPairsJsDefault = _parcelHelpers.interopDefault(_createToPairsJs);
var _keysJs = require('./keys.js');
var _keysJsDefault = _parcelHelpers.interopDefault(_keysJs);
/**
* Creates an array of own enumerable string keyed-value pairs for `object`
* which can be consumed by `_.fromPairs`. If `object` is a map or set, its
* entries are returned.
*
* @static
* @memberOf _
* @since 4.0.0
* @alias entries
* @category Object
* @param {Object} object The object to query.
* @returns {Array} Returns the key-value pairs.
* @example
*
* function Foo() {
*   this.a = 1;
*   this.b = 2;
* }
*
* Foo.prototype.c = 3;
*
* _.toPairs(new Foo);
* // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
*/
var toPairs = _createToPairsJsDefault.default(_keysJsDefault.default);
exports.default = toPairs;
