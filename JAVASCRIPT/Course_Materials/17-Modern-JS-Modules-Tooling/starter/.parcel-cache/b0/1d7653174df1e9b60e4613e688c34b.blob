var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _createCtorJs = require('./_createCtor.js');
var _createCtorJsDefault = _parcelHelpers.interopDefault(_createCtorJs);
var _rootJs = require('./_root.js');
var _rootJsDefault = _parcelHelpers.interopDefault(_rootJs);
/** Used to compose bitmasks for function metadata.*/
var WRAP_BIND_FLAG = 1;
/**
* Creates a function that wraps `func` to invoke it with the optional `this`
* binding of `thisArg`.
*
* @private
* @param {Function} func The function to wrap.
* @param {number} bitmask The bitmask flags. See `createWrap` for more details.
* @param {*} [thisArg] The `this` binding of `func`.
* @returns {Function} Returns the new wrapped function.
*/
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG, Ctor = _createCtorJsDefault.default(func);
  function wrapper() {
    var fn = this && this !== _rootJsDefault.default && this instanceof wrapper ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}
exports.default = createBind;
