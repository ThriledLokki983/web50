var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _copyObjectJs = require('./_copyObject.js');
var _copyObjectJsDefault = _parcelHelpers.interopDefault(_copyObjectJs);
var _createAssignerJs = require('./_createAssigner.js');
var _createAssignerJsDefault = _parcelHelpers.interopDefault(_createAssignerJs);
var _keysInJs = require('./keysIn.js');
var _keysInJsDefault = _parcelHelpers.interopDefault(_keysInJs);
/**
* This method is like `_.assign` except that it iterates over own and
* inherited source properties.
*
* **Note:** This method mutates `object`.
*
* @static
* @memberOf _
* @since 4.0.0
* @alias extend
* @category Object
* @param {Object} object The destination object.
* @param {...Object} [sources] The source objects.
* @returns {Object} Returns `object`.
* @see _.assign
* @example
*
* function Foo() {
*   this.a = 1;
* }
*
* function Bar() {
*   this.c = 3;
* }
*
* Foo.prototype.b = 2;
* Bar.prototype.d = 4;
*
* _.assignIn({ 'a': 0 }, new Foo, new Bar);
* // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
*/
var assignIn = _createAssignerJsDefault.default(function (object, source) {
  _copyObjectJsDefault.default(source, _keysInJsDefault.default(source), object);
});
exports.default = assignIn;
