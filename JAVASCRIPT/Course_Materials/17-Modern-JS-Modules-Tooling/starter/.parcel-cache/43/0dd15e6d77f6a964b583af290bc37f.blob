var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _isArrayJs = require('./isArray.js');
var _isArrayJsDefault = _parcelHelpers.interopDefault(_isArrayJs);
var _isKeyJs = require('./_isKey.js');
var _isKeyJsDefault = _parcelHelpers.interopDefault(_isKeyJs);
var _stringToPathJs = require('./_stringToPath.js');
var _stringToPathJsDefault = _parcelHelpers.interopDefault(_stringToPathJs);
var _toStringJs = require('./toString.js');
var _toStringJsDefault = _parcelHelpers.interopDefault(_toStringJs);
/**
* Casts `value` to a path array if it's not one.
*
* @private
* @param {*} value The value to inspect.
* @param {Object} [object] The object to query keys on.
* @returns {Array} Returns the cast property path array.
*/
function castPath(value, object) {
  if (_isArrayJsDefault.default(value)) {
    return value;
  }
  return _isKeyJsDefault.default(value, object) ? [value] : _stringToPathJsDefault.default(_toStringJsDefault.default(value));
}
exports.default = castPath;
