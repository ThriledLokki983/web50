var _modelJs = require('./model.js');
var _viewRecipeViewJs = require('./view/recipeView.js');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _viewRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewRecipeViewJs);
var _viewSearchViewJs = require('./view/searchView.js');
var _viewSearchViewJsDefault = _parcelHelpers.interopDefault(_viewSearchViewJs);
var _viewResultViewJs = require('./view/resultView.js');
var _viewResultViewJsDefault = _parcelHelpers.interopDefault(_viewResultViewJs);
var _viewPaginationViewJs = require('./view/paginationView.js');
var _viewPaginationViewJsDefault = _parcelHelpers.interopDefault(_viewPaginationViewJs);
require('core-js/stable');
require('regenerator-runtime/runtime');
// Polyfiling async await
if (module.hot) {
  module.hot.accept();
}
// https://forkify-api.herokuapp.com/v2
const controlRecipes = async function () {
  try {
    const id = window.location.hash.slice(1);
    if (!id) return;
    _viewRecipeViewJsDefault.default.renderSpinner();
    // update resultview to mark the selected search result
    // resultsView.update(model.getSearchResultsPage());
    _viewResultViewJsDefault.default.render(_modelJs.getSearchResultsPage());
    // Loading Recipe
    await _modelJs.loadRecipe(id);
    // Rendering Recipe
    _viewRecipeViewJsDefault.default.render(_modelJs.state.recipe);
  } catch (error) {
    _viewRecipeViewJsDefault.default.renderError();
  }
};
const controlSearchResults = async function () {
  try {
    _viewResultViewJsDefault.default.renderSpinner();
    // Getting the search query
    const query = _viewSearchViewJsDefault.default.getQuery();
    if (!query) return;
    // Loading search results
    await _modelJs.loadSearchResults(query);
    // Rendering the searched results
    // resultsView.render(model.state.search.results);
    _viewResultViewJsDefault.default.render(_modelJs.getSearchResultsPage());
    // Render initial pagination
    _viewPaginationViewJsDefault.default.render(_modelJs.state.search);
  } catch (err) {
    console.log(err);
  }
};
const controlPagination = function (goToPage) {
  // Render NEW results
  _viewResultViewJsDefault.default.render(_modelJs.getSearchResultsPage(goToPage));
  // Render NEW Pagination Results
  _viewPaginationViewJsDefault.default.render(_modelJs.state.search);
};
const controlServings = function (newServings) {
  // Update the recipe servings (in state)
  _modelJs.updateServings(newServings);
  // Update the recipe view
  // recipeView.render(model.state.recipe);
  _viewRecipeViewJsDefault.default.update(_modelJs.state.recipe);
};
const init = function () {
  _viewRecipeViewJsDefault.default.addHandlerRender(controlRecipes);
  _viewRecipeViewJsDefault.default.addHandlerUpdateServings(controlServings);
  _viewSearchViewJsDefault.default.addHandlerSearch(controlSearchResults);
  _viewPaginationViewJsDefault.default.addHandlerClick(controlPagination);
};
init();
